// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using WorkFlowDynamic.DataEntityTypes;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WorkFlowDynamic.DataEntityTypes;

namespace WorkFlowDynamic.Models
{
    public partial class WorkflowdynamicContext : DbContext
    {
        public WorkflowdynamicContext()
        {
        }

        public WorkflowdynamicContext(DbContextOptions<WorkflowdynamicContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Agence> Agence { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Guichet> Guichet { get; set; }
        public virtual DbSet<Operation> Operation { get; set; }
        public virtual DbSet<SchemeWorkFlowSet> SchemeWorkFlowSet { get; set; }
        public virtual DbSet<Scheme_StepSet> Scheme_StepSet { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<StepWorkFlowSet> StepWorkFlowSet { get; set; }
        public virtual DbSet<TransitionSet> TransitionSet { get; set; }
        public virtual DbSet<TypeOperation> TypeOperation { get; set; }
        public virtual DbSet<User> User { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-DDA4MFK\\MSSQLADATINA;Initial Catalog=WorkFlowDynamic;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Scheme_StepSet>(entity =>
            {
                entity.HasOne(d => d.SchemeWorkFlow)
                    .WithMany(p => p.Scheme_StepSet)
                    .HasForeignKey(d => d.SchemeWorkFlowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SchemeStepSet_SchemeWorkFlowSet");

                entity.HasOne(d => d.StepWorkFlow)
                    .WithMany(p => p.Scheme_StepSet)
                    .HasForeignKey(d => d.StepWorkFlowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SchemeStepSet_SchemeStepSet");
            });

            modelBuilder.Entity<TransitionSet>(entity =>
            {
                entity.HasOne(d => d.StepWorkFlow)
                    .WithMany(p => p.TransitionSet)
                    .HasForeignKey(d => d.StepWorkFlowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TransitionSet_StepWorkFlowSet");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}